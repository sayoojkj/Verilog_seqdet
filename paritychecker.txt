design 
module parity(
  input x,
  input clk,
  output reg z
);
  reg even_odd;
  parameter Even = 1'b0, Odd = 1'b1;

  always @(posedge clk)
    case (even_odd)
      Even: begin
        z <= x ? 1 : 0;
        even_odd <= x ? Odd:Even;
      end
      Odd: begin
        z <= x ? 0 : 1;
        even_odd <= x ? Even:Odd;
      end
      default: begin
        z <= 0;
        even_odd <= Even;
      end
    endcase
endmodule

testbench
module partest;
  reg clk,x;
  wire z;
  parity dut(x,clk,z);
  always #5 clk=~clk;
  initial
    begin
      $dumpfile("dump.vcd");
      $dumpvars(0);
      clk=1'b0;
    end
  initial 
    begin
      #2 x=0; #10 x=1; #10 x=1; #10 x=1;
      #10 x=1; #10 x=0; #10 x=0; #10 x=1;
  	#10 $finish;
    end
endmodule
